#include <stdio.h>
#include <math.h>
#define K_num 9
/*

*/
#define BAUDRATE 57600
#define DEBUGOUTPUT 0
int result;
int AllResult[100] = {0};
int allresult_count = 0;
int   generatedChecksum = 0;
byte  checksum = 0;
int Test_scope = 10;                //******可调变量
int Threshold = 0.7;                //******可调变量
int vibration_result = 0;
int k = 0;
byte attention_buffer[5] = {0}; // Sum of 5 attention values
byte average5_attention = 0; // Average of 5 attention values
int attention_loop = 0;


//校验相关变量



//接收数据长度和数据数组
byte  payloadLength = 0;
byte  payloadData[32] = {0};//总共接收32个自己的数据

//需要读取的信息变量
byte signalquality = 0;
byte attention = 0;   
byte meditation = 0;  



//初始化
void setup()
{
  Serial.begin(BAUDRATE);
}

//从串口读取一个字节数据
byte ReadOneByte()
{
  int ByteRead;
  while (!Serial.available());
  ByteRead = Serial.read();
  return ByteRead;//返回读到的字节
}

//读取串口数据
void read_serial_data()
{
  //寻找数据包起始同步字节，2个
  if (ReadOneByte() == 0xAA) //先读一个
  {
    if (ReadOneByte() == 0xAA) //读第二个
    {
      payloadLength = ReadOneByte();//读取第三个，数据包字节的长度
      if (payloadLength == 0x20) //如果接收到的是大包数据才继续读取，小包数据则舍弃不读取
      {
        generatedChecksum = 0; //校验变量清0
        for (int i = 0; i < payloadLength; i++) //连续读取32个字节
        {
          payloadData[i] = ReadOneByte();//读取指定长度数据包中的数据
          generatedChecksum += payloadData[i];//计算数据累加和
        }
        checksum = ReadOneByte();//读取校验字节
        //校验
        generatedChecksum = (~generatedChecksum) & 0xff;
        //比较校验字节
        if (checksum == generatedChecksum) //数据接收正确，继续处理
        {
          signalquality = 0;
          attention = 0;   
          //赋值数据
          signalquality = payloadData[1];
          attention = payloadData[29];
          meditation = payloadData[31];
        }
      }
    }
  }
}
     
//主循环
void loop()
{
  read_serial_data();//读取串口数据
}